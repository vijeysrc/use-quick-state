{
  "name": "use-easy-state",
  "version": "1.0.0",
  "description": "An easy way to add state without having multiple useState hooks. Too many useState hooks have to be refactored using useReducer. This hook abstracts that conversion from useState to useReducer. It looks like useState but behaves like useReducer.",
  "author": "Vijey Narayanaswamy",
  "main": "dist/use-easy-state.js",
  "umd:main": "dist/use-easy-state.umd.js",
  "module": "dist/use-easy-state.m.js",
  "unpkg": "dist/use-easy-state.umd.js",
  "source": "src/index.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/vijeysrc/use-easy-state.git"
  },
  "bugs": {
    "url": "https://github.com/vijeysrc/use-easy-state/issues"
  },
  "peerDependencies": {
    "react": "^17.0.1"
  },
  "devDependencies": {
    "@babel/core": "^7.12.3",
    "@babel/preset-env": "^7.12.1",
    "@testing-library/react-hooks": "^3.4.2",
    "babel-jest": "^26.6.1",
    "jest": "^26.6.1",
    "microbundle": "^0.12.4",
    "react": "^17.0.1",
    "standard": "^15.0.1"
  },
  "scripts": {
    "lint": "standard",
    "lint:fix": "standard --fix",
    "test": "jest --verbose --coverage",
    "test:watch": "jest --watch --runInBand",
    "prebuild": "rimraf dist && npm run lint && npm run test",
    "build": "microbundle -o dist/ --sourcemap false",
    "dev": "microbundle watch -o dist/ --sourcemap false --compress false"
  },
  "files": [
    "dist"
  ]
}